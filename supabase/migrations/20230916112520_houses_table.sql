create table
  public.houses (
    name text not null,
    description text null,
    images text[] null,
    price numeric not null,
    amount_reached numeric not null default 0,
    investment_details json not null,
    publishing_date timestamp with time zone not null default now(),
    start_date timestamp with time zone null,
    duration integer not null,
    coords json not null,
    address text not null,
    is_paid boolean not null default false,
    is_ready boolean not null default false,
    id integer generated by default as identity,
    investors text[] null,
    total_required numeric not null,
    airbnb_link text null,
    contract_ended boolean null default false,
    constraint houses_pkey primary key (id, name),
    constraint houses_id_key unique (id),
    constraint houses_name_key unique (name),
    constraint amount_check check ((amount_reached <= total_required))
  ) tablespace pg_default;

create index if not exists houses_id_idx on public.houses using btree (id) tablespace pg_default;

create trigger house_ready_notification
after
update on houses for each row when (
  new.is_ready = true
  and old.is_ready = false
)
execute function create_house_ready_notification ();

create trigger send_new_apartment_notification
after insert on houses for each row
execute function send_new_apartment_notification ();

create trigger send_investment_completed_notification
after
update of amount_reached on houses for each row when (
  new.amount_reached >= new.total_required
  and old.amount_reached < new.total_required
)
execute function send_investment_completed_notification ();

create trigger investment_almostcomplete_notification
after
update on houses for each row when (
  new.amount_reached < new.total_required
  and new.amount_reached >= (0.9 * new.total_required)
  and old.amount_reached < (0.9 * new.total_required)
)
execute function send_investment_almostcomplete_notification ();

create trigger apartament_ownership_ended_trigger
after
update on houses for each row when (
  new.contract_ended = true
  and old.contract_ended = false
)
execute function send_apartament_ownership_ended_notification ();